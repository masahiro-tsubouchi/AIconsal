name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend-tests:
    name: Backend Tests (pytest + coverage)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start backend container
        run: docker compose up -d backend

      - name: Run pytest inside backend container (with coverage)
        run: docker compose exec -T backend pytest -q

      - name: Upload coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: |
            backend/coverage.xml
            backend/htmlcov/

  frontend-tests:
    name: Frontend Tests (Jest + coverage)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Type check (Docker container)
        run: docker compose run --rm frontend npm run type-check

      - name: Run tests with coverage (Docker container)
        run: docker compose run --rm -e CI=true frontend npm run test:coverage

      - name: Upload coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: |
            frontend/coverage/lcov.info
            frontend/coverage/

  graph-export:
    name: Graph Export (Mermaid + PNG)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start backend container for graph export
        run: docker compose up -d backend

      - name: Export Mermaid to docs/graph.mmd (via backend container)
        run: docker compose exec -T backend python -c "from app.services.langgraph_service import LangGraphService; print(LangGraphService().export_mermaid())" > docs/graph.mmd

      - name: Render PNG from Mermaid (Docker Mermaid CLI)
        run: bash scripts/render_graph_png.sh

      - name: Upload graph artifacts
        uses: actions/upload-artifact@v4
        with:
          name: graph-artifacts
          path: |
            docs/graph.mmd
            docs/graph.png
